{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todoList","setSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setVisibleTodoList","todoListFromServer","useState","search","setSearch","selectFilter","setSelectFilter","useEffect","filter","includes","onChange","e","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","name","email","user","setUser","userId","a","href","App","todos","setTodos","visibleTodoList","todosList","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e72b2481.chunk.js","sourcesContent":["import React from 'react';\nimport className from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoList: Todo[]\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todoList,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todoList.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={\n                className(\n                  { 'has-text-success': todo.completed },\n                  { 'has-text-danger': !todo.completed },\n                )\n              }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={className(\n                    'far',\n                    selectedTodo?.id !== todo.id ? 'fa-eye' : 'fa-eye-slash',\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setVisibleTodoList: React.Dispatch<React.SetStateAction<Todo[]>>\n  todoListFromServer: Todo[]\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setVisibleTodoList,\n  todoListFromServer,\n}) => {\n  const [search, setSearch] = useState('');\n  const [selectFilter, setSelectFilter] = useState('all');\n\n  useEffect(() => {\n    switch (selectFilter) {\n      case 'all':\n        setVisibleTodoList(todoListFromServer\n          .filter(todo => todo.title.includes(search)));\n        break;\n\n      case 'active':\n        setVisibleTodoList(todoListFromServer\n          .filter(todo => todo.completed === false\n            && todo.title.includes(search)));\n        break;\n\n      case 'completed':\n        setVisibleTodoList(todoListFromServer\n          .filter(todo => todo.completed !== false\n            && todo.title.includes(search)));\n        break;\n\n      default:\n        break;\n    }\n  }, [search, selectFilter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              setSelectFilter(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={(e) => {\n            setSearch(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setSearch('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport className from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n  selectedTodo: Todo\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const { title, id, completed } = selectedTodo;\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n  });\n\n  useEffect(() => {\n    getUser(id).then(a => {\n      setUser(a);\n    });\n  });\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user.name ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={className(\n                completed ? 'has-text-success' : 'has-text-danger',\n              )}\n              >\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodoList, setVisibleTodoList] = useState<Todo[]>(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(todosList => {\n      setTodos(todosList);\n      setVisibleTodoList(todosList);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setVisibleTodoList={setVisibleTodoList}\n                todoListFromServer={todos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todoList={visibleTodoList}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )\n                : (<Loader />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}